{
  "name": "llm-vscode-plugin",
  "displayName": "llm-vscode-plugin",
  "description": "LLM Extension for VSCode",
  "publisher": "Darknoon5891",
  "version": "0.2.5",
  "engines": {
    "vscode": "^1.92.0"
  },
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Darknoon5891/llm-vscode-plugin"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "llm-vscode-plugin",
      "properties": {
        "modelConfig.openaimodel": {
          "type": "string",
          "default": "gpt-4o",
          "description": "OpenAI Model Version"
        },
        "modelConfig.openaimaxtokens": {
          "type": "integer",
          "default": 4000,
          "description": "Max Tokens for OpenAI"
        },
        "modelConfig.openaicodeprompt": {
          "type": "string",
          "default": "Follow the instruction in the comments that you are sent, only following the latest comments. Do not talk at all. Only output valid code. Do not provide any backticks that surround the code. Never ever output backticks like this ```.",
          "description": "System Prompt for (Code) OpenAI Requests"
        },
        "modelConfig.openaihelprompt": {
          "type": "string",
          "default": "You are a helpful assistant. What I have sent are my notes so far. You are very curt, yet helpful. Never ever output backticks like this ```. Do not generate code.",
          "description": "System Prompt for (Help) OpenAI Requests"
        },
        "modelConfig.anthropiccodeprompt": {
          "type": "string",
          "default": "Follow the instruction in the comments that you are sent, only following the latest comments. Do not talk at all. Only output valid code. Do not provide any backticks that surround the code. Never ever output backticks like this ```.",
          "description": "System Prompt for (Code) Anthropic Requests"
        },
        "modelConfig.anthropichelpprompt": {
          "type": "string",
          "default": "You are a helpful assistant. What I have sent are my notes so far. You are very curt, yet helpful. Never ever output backticks like this ```. Do not generate code.",
          "description": "System Prompt for (Help) Anthropic Requests"
        },
        "modelConfig.anthropicmodel": {
          "type": "string",
          "default": "claude-3-5-sonnet-20240620",
          "description": "Anthropic Model Version"
        },
        "modelConfig.anthropicmaxtokens": {
          "type": "integer",
          "default": 4000,
          "description": "Max Tokens for Anthropic"
        }
      }
    },
    "commands": [
      {
        "command": "extension.selectOpenAICode",
        "title": "Send Code to OpenAI"
      },
      {
        "command": "extension.selectOpenAIHelp",
        "title": "Helper Request to OpenAI"
      },
      {
        "command": "extension.selectAnthropicCode",
        "title": "Send Code to Anthropic"
      },
      {
        "command": "extension.selectAnthropicHelp",
        "title": "Helper Request to Anthropic"
      },
      {
        "command": "extension.sendToAPI",
        "title": "Send Code to AI Provider"
      }
    ],
    "keybindings": [
      {
        "command": "extension.selectAnthropicCode",
        "key": "ctrl+alt+c",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.selectAnthropicHelp",
        "key": "ctrl+alt+v",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.selectOpenAICode",
        "key": "ctrl+alt+b",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.selectOpenAIHelp",
        "key": "ctrl+alt+n",
        "when": "editorTextFocus"
      },
      {
        "command": "extension.sendToAPI",
        "key": "ctrl+alt+x",
        "when": "editorTextFocus"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.4.5"
  },
  "dependencies": {
    "axios": "^1.7.4",
    "dotenv": "^16.4.5"
  }
}